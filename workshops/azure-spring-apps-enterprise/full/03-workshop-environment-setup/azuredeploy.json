{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "baseName": {
            "type": "string",
            "defaultValue": "[subscription().displayName]"
        },
        "administratorLogin": {
            "type": "string",
            "defaultValue": "admin",
            "metadata": {
                "description": "Admin login for Postgres DB"
            }
        },
        "administratorLoginPassword": {
            "type": "secureString",
            "defaultValue": "super$ecr3t",
            "metadata": {
                "description": "Admin login password for Postgres DB"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "serverName": {
            "type": "string",
            "defaultValue": "[concat(subscription().displayName,'-db')]"
        },
        "serverEdition": {
            "type": "string",
            "defaultValue": "GeneralPurpose"
        },
        "skuSizeGB": {
            "type": "int",
            "defaultValue": 128
        },
        "dbInstanceType": {
            "type": "string",
            "defaultValue": "Standard_D4ds_v4"
        },
        "haMode": {
            "type": "string",
            "defaultValue": "ZoneRedundant"
        },
        "availabilityZone": {
            "type": "string",
            "defaultValue": "1"
        },
        "version": {
            "type": "string",
            "defaultValue": "12"
        },
        "virtualNetworkExternalId": {
            "type": "string",
            "defaultValue": ""
        },
        "subnetName": {
            "type": "string",
            "defaultValue": ""
        },
        "privateDnsZoneArmResourceId": {
            "type": "string",
            "defaultValue": ""
        },
        // Parameters for Application Insights
        "log_analytics_workspace_name": {
            "defaultValue": "[concat('sclab-la-', uniqueString(resourceGroup().id))]",
            "type": "string"
        },
        // Parameters for Azure Cache for Redis
        "redisCacheName": {
            "type": "string",
            "defaultValue": "[format('redisCache-{0}', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "Specify the name of the Azure Redis Cache to create."
            }
        },
        "redisCacheSKU": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
            ],
            "metadata": {
                "description": "Specify the pricing tier of the new Azure Redis Cache."
            }
        },
        "redisCacheFamily": {
            "type": "string",
            "defaultValue": "C",
            "allowedValues": [
                "C",
                "P"
            ],
            "metadata": {
                "description": "Specify the family for the sku. C = Basic/Standard, P = Premium."
            }
        },
        "redisCacheCapacity": {
            "type": "int",
            "defaultValue": 1,
            "allowedValues": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
            ],
            "metadata": {
                "description": "Specify the size of the new Azure Redis Cache instance. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4)"
            }
        },
        "enableNonSslPort": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Specify a boolean value that indicates whether to allow access via non-SSL ports."
            }
        },
        "diagnosticsEnabled": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Specify a boolean value that indicates whether diagnostics should be saved to the specified storage account."
            }
        }
        // "existingDiagnosticsStorageAccountName": {
        //     "type": "string",
        //     "metadata": {
        //         "description": "Specify the name of an existing storage account for diagnostics."
        //     }
        // },
        // "existingDiagnosticsStorageAccountResourceGroup": {
        //     "type": "string",
        //     "metadata": {
        //         "description": "Specify the resource group name of an existing storage account for diagnostics."
        //     }
        // },
        // "tagsArray": {
        //     "type": "object",
        //     "metadata": {
        //         "description": "See documentation on tags: https://docs.microsoft.com/azure/azure-resource-manager/management/tag-resources."
        //     }
        // }
    },
    "resources": [
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('baseName'),'-db')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('dbInstanceType')]",
                "tier": "[parameters('serverEdition')]"
            },
            "properties": {
                "version": "[parameters('version')]",
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "network": {
                    "delegatedSubnetResourceId": "[if(empty(parameters('virtualNetworkExternalId')), json('null'), json(format('{0}/subnets/{1}', parameters('virtualNetworkExternalId'), parameters('subnetName'))))]",
                    "privateDnsZoneArmResourceId": "[if(empty(parameters('virtualNetworkExternalId')), json('null'), parameters('privateDnsZoneArmResourceId'))]"
                },
                "highAvailability": {
                    "mode": "[parameters('haMode')]"
                },
                "storage": {
                    "storageSizeGB": "[parameters('skuSizeGB')]"
                },
                "backup": {
                    "backupRetentionDays": 7,
                    "geoRedundantBackup": "Disabled"
                },
                "availabilityZone": "[parameters('availabilityZone')]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2015-11-01-preview",
            "name": "[concat(parameters('baseName'),'-la')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "name": "PerGB2018"
                },
                "retentionInDays": 30
            }
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02",
            "name": "[concat(parameters('baseName'),'-insights')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tagsArray')]",
            "kind": "other",
            "properties": {
                "Application_Type": "Web",
                "Flow_Type": "Bluefield",
                "Request_Source": "rest"
            }
        }
        // {
        //     "type": "Microsoft.Cache/redis",
        //     "apiVersion": "2020-06-01",
        //     "name": "[parameters('redisCacheName')]",
        //     "location": "[parameters('location')]",
        //     "properties": {
        //         "enableNonSslPort": "[parameters('enableNonSslPort')]",
        //         "minimumTlsVersion": "1.2",
        //         "sku": {
        //             "capacity": "[parameters('redisCacheCapacity')]",
        //             "family": "[parameters('redisCacheFamily')]",
        //             "name": "[parameters('redisCacheSKU')]"
        //         }
        //     }
        // },
        // {
        //     "type": "Microsoft.Insights/diagnosticSettings",
        //     "apiVersion": "2021-05-01-preview",
        //     "scope": "[format('Microsoft.Cache/redis/{0}', parameters('redisCacheName'))]",
        //     "name": "[parameters('redisCacheName')]",
        //     "properties": {
        //         "storageAccountId": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('existingDiagnosticsStorageAccountResourceGroup')), 'Microsoft.Storage/storageAccounts', parameters('existingDiagnosticsStorageAccountName'))]",
        //         "metrics": [
        //             {
        //                 "timeGrain": "AllMetrics",
        //                 "enabled": "[parameters('diagnosticsEnabled')]",
        //                 "retentionPolicy": {
        //                     "days": 90,
        //                     "enabled": "[parameters('diagnosticsEnabled')]"
        //                 }
        //             }
        //         ]
        //     },
        //     "dependsOn": [
        //         "[resourceId('Microsoft.Cache/redis', parameters('redisCacheName'))]"
        //     ]
        // }
    ]
}