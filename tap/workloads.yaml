#@ load("@ytt:data", "data")

---
apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: acme-cart
  namespace: #@ data.values.workloadNamespace
  labels:
    apps.tanzu.vmware.com/workload-type: server
    app.kubernetes.io/part-of: acme-cart
    apps.tanzu.vmware.com/has-tests: "true"
spec:
  env:
  - name: CART_PORT
    value: "8080"
  - name: AUTH_MODE
    value: "0"
  - name: REDIS_HOST
    value: cart-redis
  - name: REDIS_PORT
    value: "6379"
  - name: REDIS_TLS_ENABLED
    value: "false"    
  - name: REDIS_PASSWORD
    valueFrom:
      secretKeyRef:
        name: cart-redis-pass
        key: password
  params:
  - name: annotations
    value:
      autoscaling.knative.dev/minScale: "1"
  - name: testing_pipeline_matching_labels
    value:
        apps.tanzu.vmware.com/pipeline: acme-fitness-generic-test      
  - name: ports
    value:
    - port: 80
      containerPort: 8080
      name: http
  source:
    subPath: apps/acme-cart
    git:
      url: #@ data.values.sourceRepo
      ref:
        branch: #@ data.values.sourceRepoBranch
---
apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: acme-order
  namespace: #@ data.values.workloadNamespace
  labels:
    apps.tanzu.vmware.com/workload-type: server
    app.kubernetes.io/part-of: acme-order
    networking.knative.dev/visibility: cluster-local
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/auto-configure-actuators: "true"
spec:
  env:
  - name: AcmeServiceSettings__AuthUrl
    value: #@ 'https://acme-fitness.' + data.values.appDomainName
  - name: PAYMENT_SERVICE_SERVICE_HOST
    value: acme-payment
  params:
  - name: annotations
    value:
      autoscaling.knative.dev/minScale: "1"
  - name: testing_pipeline_matching_labels
    value:
        apps.tanzu.vmware.com/pipeline: acme-fitness-generic-test         
  - name: ports
    value:
    - port: 80
      containerPort: 8080
      name: http
  source:
    subPath: apps/acme-order
    git:
      url: #@ data.values.sourceRepo
      ref:
        branch: #@ data.values.sourceRepoBranch
---
apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: acme-shopping
  namespace: #@ data.values.workloadNamespace
  labels:
    apps.tanzu.vmware.com/workload-type: server
    app.kubernetes.io/part-of: acme-shopping
    apps.tanzu.vmware.com/has-tests: "true"
spec:
  env:
  - name: PORT
    value: "8080"
  build:
    env:
    - name: BP_NODE_RUN_SCRIPTS
      value: "build"
    - name: BP_WEB_SERVER
      value: "httpd"
    - name: BP_WEB_SERVER_ROOT
      value: "public"
    - name: BP_WEB_SERVER_ENABLE_PUSH_STATE
      value: "true"
  params:
  - name: annotations
    value:
      autoscaling.knative.dev/minScale: "1"
  - name: testing_pipeline_matching_labels
    value:
        apps.tanzu.vmware.com/pipeline: acme-fitness-generic-test   
  - name: ports
    value:
    - port: 80
      containerPort: 8080
      name: http
  source:
    subPath: apps/acme-shopping
    git:
      url: #@ data.values.sourceRepo
      ref:
        branch: #@ data.values.sourceRepoBranch
---
apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: acme-identity
  namespace: #@ data.values.workloadNamespace
  labels:
    apps.tanzu.vmware.com/workload-type: server
    app.kubernetes.io/part-of: acme-identity
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/auto-configure-actuators: "true"
spec:
  build:
     env: 
       - name: BP_JVM_VERSION
         value: "17"
  env:
  - name: JWK_URI
    value:  #@ data.values.appSSOIssuerURI + '/oauth2/jwks'
  - name: spring_profiles_active
    value: tap    
  params:
  - name: annotations
    value:
      autoscaling.knative.dev/minScale: "1"
  - name: testing_pipeline_matching_labels
    value:
        apps.tanzu.vmware.com/pipeline: acme-fitness-generic-test  
  - name: ports
    value:
    - port: 80
      containerPort: 8080
      name: http
  source:
    subPath: apps/acme-identity
    git:
      url: #@ data.values.sourceRepo
      ref:
        branch: #@ data.values.sourceRepoBranch
---
apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: acme-catalog
  namespace: #@ data.values.workloadNamespace
  labels:
    apps.tanzu.vmware.com/workload-type: server
    app.kubernetes.io/part-of: acme-catalog
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/auto-configure-actuators: "true"
spec:
  build:
     env: 
       - name: BP_JVM_VERSION
         value: "17"
  env:
    - name: spring.mvc.static-path-pattern
      value: /static/images/**
    - name: spring.web.resources.cache.cachecontrol.max-age
      value: "3600"
    - name: spring.web.resources.cache.cachecontrol.cache-public
      value: "true"
  params:
  - name: annotations
    value:
      autoscaling.knative.dev/minScale: "1"
  - name: testing_pipeline_matching_labels
    value:
       apps.tanzu.vmware.com/pipeline: acme-fitness-java-subpath-test  
  - name: testing_pipeline_params
    value:
      subpath: "apps/acme-catalog"
  - name: ports
    value:
    - port: 80
      containerPort: 8080
      name: http
  source:
    subPath: apps/acme-catalog
    git:
      url: #@ data.values.sourceRepo
      ref:
        branch: #@ data.values.sourceRepoBranch
---
apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: acme-payment
  namespace: #@ data.values.workloadNamespace
  labels:
    apps.tanzu.vmware.com/workload-type: server
    app.kubernetes.io/part-of: acme-payment
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/auto-configure-actuators: "true"
spec:
  build:
     env: 
       - name: BP_JVM_VERSION
         value: "17"
  params:
  - name: annotations
    value:
      autoscaling.knative.dev/minScale: "1"
  - name: testing_pipeline_matching_labels
    value:
       apps.tanzu.vmware.com/pipeline: acme-fitness-java-subpath-test  
  - name: testing_pipeline_params
    value:
      subpath: "apps/acme-payment"
  - name: ports
    value:
    - port: 80
      containerPort: 8080
      name: http
  source:
    subPath: apps/acme-payment
    git:
      url: #@ data.values.sourceRepo
      ref:
        branch: #@ data.values.sourceRepoBranch