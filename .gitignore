__pycache__
.DS_Store
.env*.secret
.idea
custom-filters


azure/setup-env-variables.sh
azure/setup-db-env-variables.sh
azure/setup-sso-variables.sh
azure/setup-env-variables-keyvault.sh
redis.json
ad.json
sso.json

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*
*.terraform.lock.hcl

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

workshops/azure-spring-apps-enterprise/scripts/setup-keyvault-env-variables.sh
scripts/setup-db-env-variables.sh

hello-world/
